{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/savasozcan/Documents/iyzico/rick-and-morty/src/pages/character/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_CHARACTERS } from '../../queries';\nimport { isObjectNotNull } from '../../utils/helpers';\nimport Characters from '../../components/organisms/Characters';\n\nconst CharacterList = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CHARACTERS, {\n    variables: {\n      page: 1\n    }\n  });\n\n  const checkProperties = () => !!(data === null || data === void 0 ? void 0 : data.characters);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !loading && !error && isObjectNotNull(data) && checkProperties() && /*#__PURE__*/React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(Characters, {\n    characters: data === null || data === void 0 ? void 0 : data.characters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    },\n    __self: this\n  })));\n};\n\n_s(CharacterList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = CharacterList;\nexport default CharacterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"sources":["/Users/savasozcan/Documents/iyzico/rick-and-morty/src/pages/character/index.js"],"names":["React","useQuery","GET_CHARACTERS","isObjectNotNull","Characters","CharacterList","loading","error","data","variables","page","checkProperties","characters"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACC,cAAD,EAAiB;AACxDO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAD6C,GAAjB,CAAzC;;AAIA,QAAMC,eAAe,GAAG,MAAM,CAAC,EAACH,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,UAAP,CAA/B;;AAEA,sBACE,0CACG,CAACN,OAAD,IAAY,CAACC,KAAb,IAAsBJ,eAAe,CAACK,IAAD,CAArC,IAA+CG,eAAe,EAA9D,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AASD,CAhBD;;GAAMP,a;UAC6BJ,Q;;;KAD7BI,a;AAkBN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_CHARACTERS } from '../../queries';\nimport { isObjectNotNull } from '../../utils/helpers';\nimport Characters from '../../components/organisms/Characters';\n\nconst CharacterList = () => {\n  const { loading, error, data } = useQuery(GET_CHARACTERS, {\n    variables: { page: 1 },\n  });\n\n  const checkProperties = () => !!data?.characters;\n\n  return (\n    <>\n      {!loading && !error && isObjectNotNull(data) && checkProperties() && (\n        <div>\n          <Characters characters={data?.characters} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CharacterList;\n"]},"metadata":{},"sourceType":"module"}