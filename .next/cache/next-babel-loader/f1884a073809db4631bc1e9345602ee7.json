{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/savasozcan/Documents/iyzico/rick-and-morty/src/components/organisms/Characters/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { GET_CHARACTERS } from '../../../queries';\nimport { isObjectNotNull } from '../../../utils/helpers';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Character from './character';\nimport Loader from '../../atoms/Loader';\nimport { ListWrapper, CharacterListWrapper } from './styles';\n\nconst Characters = ({\n  characters\n}) => {\n  _s();\n\n  const {\n    results,\n    info: {\n      next\n    }\n  } = characters;\n  const {\n    0: nextPage,\n    1: setNextPage\n  } = useState(next);\n  const {\n    0: allCharacters,\n    1: setAllCharacters\n  } = useState(results);\n  const [getCharacters, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GET_CHARACTERS);\n  useEffect(() => {\n    if (!data || !data.characters) return;\n    const {\n      characters: {\n        results: newResults,\n        info: {\n          next: newPageLink\n        }\n      }\n    } = data;\n    setNextPage(newPageLink);\n    setAllCharacters([...allCharacters, ...newResults]);\n  }, [data]);\n\n  const renderCharacters = () => {\n    return /*#__PURE__*/React.createElement(CharacterListWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      },\n      __self: this\n    }, allCharacters.map((character, key) => /*#__PURE__*/React.createElement(Character, {\n      key: key,\n      character: character,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      },\n      __self: this\n    })));\n  };\n\n  const loadMoreData = () => {\n    getCharacters({\n      variables: {\n        page: nextPage\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ListWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: allCharacters === null || allCharacters === void 0 ? void 0 : allCharacters.length,\n    next: loadMoreData,\n    hasMore: nextPage,\n    height: \"100vh\",\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    loader: /*#__PURE__*/React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    },\n    __self: this\n  }, renderCharacters()));\n};\n\n_s(Characters, \"vQskT9CfoRnlp0rGiyGGQmrXPXc=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/savasozcan/Documents/iyzico/rick-and-morty/src/components/organisms/Characters/index.js"],"names":["React","useEffect","useState","PropTypes","useLazyQuery","GET_CHARACTERS","isObjectNotNull","InfiniteScroll","Character","Loader","ListWrapper","CharacterListWrapper","Characters","characters","results","info","next","nextPage","setNextPage","allCharacters","setAllCharacters","getCharacters","loading","error","data","newResults","newPageLink","renderCharacters","map","character","key","loadMoreData","variables","page","length","display","flexWrap","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,UAAlD;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AACrC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAFF,MAGFH,UAHJ;AAIA,QAAM;AAAA,OAACI,QAAD;AAAA,OAAWC;AAAX,MAA0BhB,QAAQ,CAACc,IAAD,CAAxC;AACA,QAAM;AAAA,OAACG,aAAD;AAAA,OAAgBC;AAAhB,MAAoClB,QAAQ,CAACY,OAAD,CAAlD;AAEA,QAAM,CAACO,aAAD,EAAgB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAhB,IAA4CpB,YAAY,CAACC,cAAD,CAA9D;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACuB,IAAD,IAAS,CAACA,IAAI,CAACX,UAAnB,EAA+B;AAE/B,UAAM;AACJA,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAEW,UADC;AAEVV,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAEU;AAAR;AAFI;AADR,QAKFF,IALJ;AAOAN,IAAAA,WAAW,CAACQ,WAAD,CAAX;AACAN,IAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmB,GAAGM,UAAtB,CAAD,CAAhB;AACD,GAZQ,EAYN,CAACD,IAAD,CAZM,CAAT;;AAcA,QAAMG,gBAAgB,GAAG,MAAM;AAC7B,wBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,aAAa,CAACS,GAAd,CAAkB,CAACC,SAAD,EAAYC,GAAZ,kBACjB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAqB,MAAA,SAAS,EAAED,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOD,GARD;;AAUA,QAAME,YAAY,GAAG,MAAM;AACzBV,IAAAA,aAAa,CAAC;AAAEW,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAEhB;AAAR;AAAb,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEE,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEe,MAD7B;AAEE,IAAA,IAAI,EAAEH,YAFR;AAGE,IAAA,OAAO,EAAEd,QAHX;AAIE,IAAA,MAAM,EAAC,OAJT;AAKE,IAAA,KAAK,EAAE;AAAEkB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE,MAA7B;AAAqCC,MAAAA,cAAc,EAAE;AAArD,KALT;AAME,IAAA,MAAM,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGV,gBAAgB,EAPnB,CADF,CADF;AAaD,CAnDD;;GAAMf,U;UAQ8CR,Y;;;KAR9CQ,U;AAqDN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { GET_CHARACTERS } from '../../../queries';\nimport { isObjectNotNull } from '../../../utils/helpers';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Character from './character';\nimport Loader from '../../atoms/Loader';\nimport { ListWrapper, CharacterListWrapper } from './styles';\n\nconst Characters = ({ characters }) => {\n  const {\n    results,\n    info: { next },\n  } = characters;\n  const [nextPage, setNextPage] = useState(next);\n  const [allCharacters, setAllCharacters] = useState(results);\n\n  const [getCharacters, { loading, error, data }] = useLazyQuery(GET_CHARACTERS);\n\n  useEffect(() => {\n    if (!data || !data.characters) return;\n\n    const {\n      characters: {\n        results: newResults,\n        info: { next: newPageLink },\n      },\n    } = data;\n\n    setNextPage(newPageLink);\n    setAllCharacters([...allCharacters, ...newResults]);\n  }, [data]);\n\n  const renderCharacters = () => {\n    return (\n      <CharacterListWrapper>\n        {allCharacters.map((character, key) => (\n          <Character key={key} character={character} />\n        ))}\n      </CharacterListWrapper>\n    );\n  };\n\n  const loadMoreData = () => {\n    getCharacters({ variables: { page: nextPage } });\n  };\n\n  return (\n    <ListWrapper>\n      <InfiniteScroll\n        dataLength={allCharacters?.length}\n        next={loadMoreData}\n        hasMore={nextPage}\n        height=\"100vh\"\n        style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}\n        loader={<Loader />}>\n        {renderCharacters()}\n      </InfiniteScroll>\n    </ListWrapper>\n  );\n};\n\nexport default Characters;\n"]},"metadata":{},"sourceType":"module"}